"use client"
import Image from 'next/image'
import { motion } from 'framer-motion'
import { FaMicroscope, FaFlagCheckered, FaNetworkWired } from 'react-icons/fa'

const sections = [
  {
    key: 'big4',
    title: 'Placement Talk by Cybersecurity Alumni',
    subtitle: 'Insights from the Big Four',
    description: [
      'Hear real-world experiences from alumni across the Big Four consulting firms.',
      'Understand hiring pathways, skills, and a day in the life of cybersecurity roles.'
    ],
    media: 'big4',
    cta: 'Save your seat',
  },
  {
    key: 'workshop',
    title: 'Forensics Workshop',
    subtitle: 'Hands-on, tool-driven investigation',
    description: [
      'Learn imaging, triage, timelines, memory forensics, and reporting with real datasets.'
    ],
    icon: <FaMicroscope className="text-5xl text-[#00B4FF]" />,
    cta: 'Join the workshop',
  },
  {
    key: 'challenges',
    title: 'Forensics Challenges',
    subtitle: 'CTF-style, prize-winning problems',
    description: [
      'Compete solo or with a team, solve artifacts and traces, win cash prizes and certificates.'
    ],
    icon: <FaFlagCheckered className="text-5xl text-[#00B4FF]" />,
    cta: 'Take the challenge',
  },
  {
    key: 'networking',
    title: 'Networking & Learning',
    subtitle: 'Meet peers and pros',
    description: [
      'Stay after sessions to connect with speakers, mentors, and fellow enthusiasts.'
    ],
    icon: <FaNetworkWired className="text-5xl text-[#00B4FF]" />,
    cta: 'Grow your circle',
  },
]

function Big4Panel() {
  return (
    <div className="grid grid-cols-2 sm:grid-cols-4 gap-4">
      {['deloitte','kpmg','ey','pwc'].map((name, idx) => (
        <motion.div 
          key={name} 
          initial={{ opacity: 0, scale: 0.8 }}
          whileInView={{ opacity: 1, scale: 1 }}
          viewport={{ once: true }}
          transition={{ duration: 0.3, delay: idx * 0.1 }}
          whileHover={{ scale: 1.05, y: -5 }}
          className="relative aspect-[16/9] rounded-xl overflow-hidden bg-black/30 border border-white/10 backdrop-blur-sm group cursor-pointer"
        >
          <div className="absolute inset-0 bg-gradient-to-br from-blue-500/10 to-cyan-500/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
          <Image src={`/logos/${name}.svg`} alt={`${name} logo`} fill className="object-contain p-4 transition-transform duration-300 group-hover:scale-110" />
        </motion.div>
      ))}
    </div>
  )
}

export default function Events() {
  return (
    <section id="events" className="py-16 md:py-24 relative">
      {/* Background glow effects */}
      <div className="absolute top-20 left-1/4 w-96 h-96 bg-blue-500/10 rounded-full blur-3xl" />
      <div className="absolute bottom-20 right-1/4 w-96 h-96 bg-cyan-500/10 rounded-full blur-3xl" />
      
      <div className="max-w-6xl mx-auto px-4 md:px-6 relative z-10">
        <motion.h2 
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.5 }}
          className="section-title"
        >
          Event Highlights
        </motion.h2>

        <div className="mt-10 space-y-16">
          {sections.map((s, i) => (
            <motion.section
              key={s.key}
              initial={{ opacity: 0, y: 40 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true, amount: 0.35 }}
              transition={{ duration: 0.55 }}
              className={`relative overflow-hidden p-0 group`}
            >
              {/* immersive band background (no card/border) */}
              <div className={`rounded-[1.25rem] md:rounded-[1.5rem] px-6 md:px-10 py-10 md:py-14 bg-gradient-to-r ${i % 2 ? 'from-[#0b1020] via-[#0e1833] to-[#0b1020]' : 'from-[#0b1020] via-[#0c1530] to-[#0b1020]'} transition-all duration-500 hover:shadow-2xl hover:shadow-blue-500/20`}> 
                {/* soft cobalt glow */}
                <span className="pointer-events-none absolute -z-0 -inset-24 opacity-25 group-hover:opacity-40 transition-opacity duration-500" style={{ background: 'radial-gradient(600px 220px at 20% 10%, rgba(0,180,255,0.18), transparent), radial-gradient(600px 220px at 80% 90%, rgba(0,71,171,0.16), transparent)' }} />

                <div className={`relative z-10 grid md:grid-cols-2 gap-8 md:gap-12 items-center ${i % 2 ? 'md:[&>div:first-child]:order-2' : ''}`}>
                  {/* Visual side */}
                  <motion.div 
                    initial={{ scale: 0.96, opacity: 0 }} 
                    whileInView={{ scale: 1, opacity: 1 }} 
                    transition={{ duration: 0.5, delay: 0.1 }} 
                    className="space-y-5"
                  >
                    {s.media === 'big4' ? (
                      <Big4Panel />
                    ) : (
                      <motion.div 
                        whileHover={{ scale: 1.05, rotate: 2 }}
                        transition={{ duration: 0.3 }}
                        className="grid place-items-center min-h-[240px] rounded-xl bg-black/20 backdrop-blur-sm border border-white/10 relative overflow-hidden group/icon"
                      >
                        <div className="absolute inset-0 bg-gradient-to-br from-blue-500/10 to-cyan-500/10 opacity-0 group-hover/icon:opacity-100 transition-opacity duration-500" />
                        <motion.div
                          whileHover={{ scale: 1.1, rotate: -5 }}
                          transition={{ duration: 0.3 }}
                        >
                          {s.icon}
                        </motion.div>
                      </motion.div>
                    )}
                  </motion.div>

                  {/* Content side */}
                  <div>
                    <motion.h3 
                      className="text-2xl md:text-3xl font-semibold text-[#00B4FF]"
                      whileHover={{ x: 5 }}
                      transition={{ duration: 0.2 }}
                    >
                      {s.title}
                    </motion.h3>
                    <p className="mt-1 text-gray-300">{s.subtitle}</p>
                    <ul className="mt-4 space-y-2 text-gray-200/90">
                      {s.description.map((d, idx) => (
                        <motion.li 
                          key={d} 
                          initial={{ opacity: 0, x: -20 }}
                          whileInView={{ opacity: 1, x: 0 }}
                          viewport={{ once: true }}
                          transition={{ duration: 0.3, delay: idx * 0.1 }}
                          className="flex items-start gap-2"
                        >
                          <span className="mt-[6px] inline-block h-2 w-2 rounded-full bg-gradient-to-r from-[#0047AB] to-[#00B4FF] animate-pulseSoft" />
                          <span>{d}</span>
                        </motion.li>
                      ))}
                    </ul>
                    <div className="relative inline-block mt-6">
                      <div className="absolute -inset-1 rounded-lg bg-gradient-to-r from-[rgba(0,71,171,0.5)] to-[rgba(0,180,255,0.5)] blur opacity-75 group-hover:opacity-100 transition duration-300" />
                      <motion.a 
                        href="/register" 
                        whileHover={{ scale: 1.05, y: -2 }} 
                        whileTap={{ scale: 0.98 }} 
                        className="relative inline-flex items-center gap-2 rounded-lg px-5 py-2.5 font-semibold text-white bg-gradient-to-r from-[#0047AB] to-[#00B4FF] shadow-neon"
                      >
                        {s.cta}
                        <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 7l5 5m0 0l-5 5m5-5H6" />
                        </svg>
                      </motion.a>
                    </div>
                  </div>
                </div>
              </div>
            </motion.section>
          ))}
        </div>
      </div>
    </section>
  )
}
                        <li key={d} className="flex items-start gap-2">
                          <span className="mt-[6px] inline-block h-2 w-2 rounded-full bg-gradient-to-r from-[#0047AB] to-[#00B4FF]" />
                          <span>{d}</span>
                        </li>
                      ))}
                    </ul>
                    <motion.a href="/register" whileHover={{ scale: 1.03 }} whileTap={{ scale: 0.98 }} className="inline-flex mt-6 items-center gap-2 rounded-lg px-5 py-2.5 font-semibold text-black bg-gradient-to-r from-[#0047AB] to-[#00B4FF] shadow-neon">{s.cta}</motion.a>
                  </div>
                </div>
              </div>
            </motion.section>
          ))}
        </div>
      </div>
    </section>
  )
}
